service: web-poc

custom:
  dev:
    COOKIE_SECRET: ${ssm:web_cookie_secret_dev}
    GOOGLE_TAG_MANAGER_ID: ''
    AMPLITUDE_KEY: ${ssm:web_amplitude_dev_key}
  uat:
  prod:

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-2
  versionFunctions: false
  environment:
    NODE_PORT: 80
    STORYBOOK: true
    LOG_LEVEL: info
    STAGE: ${opt:stage, self:provider.stage}
    COOKIE_SECRET: ${self:custom.${opt:stage, self:provider.stage}.COOKIE_SECRET}
    GOOGLE_TAG_MANAGER_ID: ${self:custom.${opt:stage, self:provider.stage}.GOOGLE_TAG_MANAGER_ID}
    AMPLITUDE_KEY: ${self:custom.${opt:stage, self:provider.stage}.AMPLITUDE_KEY}

package:
  excludeDevDependencies: false
  exclude:
    - '**/*'
  include:
    - node_modules/**
    - dist/**
    - config/**
    - .env

functions:
  app:
    handler: dist/server/lambda-index.handler
    timeout: 30
    reservedConcurrency: 100
    events:
      - http: 'ANY /'
      - http: 'ANY {proxy+}'

resources:
  Resources:
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseType: DEFAULT_5XX
        ResponseTemplates:
          text/html: ${file(./dist/server/error-page.js):html}
        RestApiId: 
          Ref: 'ApiGatewayRestApi'
